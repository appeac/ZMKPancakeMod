/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp N1>, <&kp N2>, <&kp N3>;
        };
    };

/ {
    combos {
        compatible = "zmk,combo";

        combo_qw {
            timeout-ms = <50>; // Detection window in milliseconds
            key-positions = <0 1>; // Positions of the keys in the matrix
            bindings = <&kp ESC>; // Output when combo is triggered
        };

        combo_as {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp TAB>;
        };
    };
};


#define DEF 0
#define NBR 1
#define NAV 2
#define FNC 3
#define SYM 4

/*
blank_layer {
            bindings = <
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans
            >;
        };
		#
*/

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC     &kp Q       &kp W       &kp E       &kp R       &kp T       &kp Y       &kp U       &kp I       &kp O         &kp P       		&kp BSPC
                &kp TAB     &kp A       &kp S       &kp D       &kp F       &kp G       &kp H       &kp J       &kp K       &kp L         &kp SEMI    		&kp SQT
                &kp LSHFT   &kp Z       &kp X       &kp C       &kp V       &kp B       &kp N       &kp M       &kp COMMA   &kp DOT  	  &kp SLASH  	    &kp ENTER
                &kp LCTRL   &kp LALT    &kp LGUI    &mo FNC     &mo SYM     &kp SPACE   &mo NBR     &mo NAV     &kp RALT    &kp C_VOL_DN  &kp C_VOL_UP  &mo FNC
            >;
        };

        number_layer {
            bindings = <
                &trans      &trans      &trans      &trans      &trans      &trans      &kp KP_NUM      &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp KP_MINUS   &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &kp KP_ASTERISK &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp KP_PLUS    &trans
                &trans      &trans      &trans      &trans      &trans      &trans      &kp KP_SLASH    &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp KP_ENTER   &kp KP_ENTER
                &trans      &trans      &trans      &trans      &trans      &trans      &trans          &kp KP_N0   &trans      &kp DOT     &trans         &trans
            >;
        };

        nav_layer {
            bindings = <
				&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &kp UP    &trans     &trans   &kp PG_UP
				&trans  &trans  &trans  &trans  &trans  &trans  &kp HOME  &kp LEFT  &kp DOWN  &kp RIGHT  &kp END  &kp PG_DN
				&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans     &trans   &trans
				&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans     &trans   &trans
            >;
        };

        function_layer {
            bindings = <
                &bootloader   &trans        &trans          &trans          &trans          &trans          &trans      &kp F10     &kp F11     &kp F12  &trans      &trans
                &trans        &trans        &trans          &trans          &trans          &trans          &trans      &kp F7      &kp F8      &kp F9   &trans      &trans
                &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &trans      &kp F4      &kp F5      &kp F6   &trans      &trans
                &out OUT_BLE  &out OUT_USB  &out OUT_TOG    &trans          &trans          &trans          &trans      &kp F1      &kp F2      &kp F3   &trans      &trans
            >;
        };
		
		symbol_layer {
            bindings = <
				&kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0    &kp MINUS  &kp EQUAL
				&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LBKT  &kp RBKT   &kp BSLH
				&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans
				&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans
            >;
        };
		
    };
};
